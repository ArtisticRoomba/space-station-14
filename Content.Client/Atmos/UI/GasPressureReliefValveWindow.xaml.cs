using System.Globalization;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Atmos.UI;

/// <summary>
/// Client-side UI for controlling a gas pressure relief valve.
/// </summary>
[GenerateTypedNameReferences]
public sealed partial class GasPressureReliefValveWindow : DefaultWindow
{
    public event Action<string>? ThresholdPressureChanged;

    public GasPressureReliefValveWindow()
    {
        RobustXamlLoader.Load(this);

        ThresholdInput.OnTextChanged += _ => SetThresholdButton.Disabled = false;
        SetThresholdButton.OnPressed += _ =>
        {
            ThresholdPressureChanged?.Invoke(ThresholdInput.Text ??= "");
            SetThresholdButton.Disabled = true;
        };

        SetToCurrentPressureButton.OnPressed += _ =>
        {
            if (ThresholdPressureLabel.Text != null)
            {
                ThresholdInput.Text = ThresholdPressureLabel.Text;
            }

            SetThresholdButton.Disabled = false;
        };

        ZeroThresholdButton.OnPressed += _ =>
        {
            ThresholdInput.Text = "0";
            SetThresholdButton.Disabled = false;
        };

        Add1000Button.OnPressed += _ => AdjustThreshold(1000);
        Add100Button.OnPressed += _ => AdjustThreshold(100);
        Add10Button.OnPressed += _ => AdjustThreshold(10);
        Subtract10Button.OnPressed += _ => AdjustThreshold(-10);
        Subtract100Button.OnPressed += _ => AdjustThreshold(-100);
        Subtract1000Button.OnPressed += _ => AdjustThreshold(-1000);
        return;

        void AdjustThreshold(float adjustment)
        {
            if (float.TryParse(ThresholdInput.Text, out var currentValue))
            {
                ThresholdInput.Text = (currentValue + adjustment).ToString(CultureInfo.CurrentCulture);
                SetThresholdButton.Disabled = false;
            }
        }
    }

    /// <summary>
    /// Sets the current threshold pressure label. This is not setting the threshold input box.
    /// </summary>
    /// <param name="threshold"> Threshold to set.</param>
    public void SetThresholdPressureLabel(float threshold)
    {
        ThresholdPressureLabel.Text = threshold.ToString(CultureInfo.CurrentCulture);
    }

    public void SetValveStatus(bool enabled)
    {
        ValveStatusLabel.Text = enabled ? "Open" : "Closed";
        ValveStatusLabel.Modulate = enabled ? Color.Green : Color.Red;
    }

    public void SetFlowRate(float flowRate)
    {
        FlowRateLabel.Text = float.IsNaN(flowRate) ? "0" : flowRate.ToString(CultureInfo.CurrentCulture);
    }
}
